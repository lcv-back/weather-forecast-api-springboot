openapi: 3.0.3
info:
  title: Weather Forecast APIs - SkyAPI Inc.
  version: 1.0.0
  description: >
    Reference design documentation of Weather Forecast
  termsOfService: https://skyweather.net/terms
  contact:
    email: vikimmich6@gmail.com
    name: Vi Le Cong Developer
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: for testing on local computer
tags:
  - name: Location
    description: >
      APIs for location management (cities and regions in
      the world)
  - name: Realtime Weather
    description: >
      APIs for accessing and updating realtime weather data

paths:
  /v1/locations:
    get:
      tags:
        - Location
      summary: Returns a list of managed locations - available for weather forecast
      description: >
        Clients use this API to get list of managed locations.
      responses:
        "200":
          description: A JSON array of location objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
        "204":
          description: No locations found

    post:
      tags:
        - Location
      summary: Add a new location
      description: >
        Clients use this API to add a new location to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationRequest"
      responses:
        "201":
          description: Location created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationRequest"

        "400":
          description: Bad Request - Invalid location data

    put:
      tags:
        - Location
      summary: Update an existing location
      description: >
        Clients use this API to update an existing location in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationRequest"
      responses:
        "200":
          description: Location updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"

        "400":
          description: Bad Request - Invalid location data

        "404":
          description: Location not found

  /v1/locations/{code}:
    get:
      tags:
        - Location
      summary: Returns detailed information about the location with the given location code
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
          description: The location code of the location to retrieve
      responses:
        "200":
          description: A JSON object representing the location
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        "404":
          description: Location not found
        "405":
          description: Method Not Allowed

    delete:
      tags:
        - Location
      summary: Removes an existing location found by a specific code
      description: Clients use this API to delete a specific location from database.
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
          description: Code of the location to be deleted.
      responses:
        "204":
          description: Successfully delete operation. Location removed.
        "404":
          description: Code not found.

  /v1/realtime:
    get:
      tags:
        - Realtime Weather
      summary: Returns the current weather information
      description: >
        Returns the current weather information of the location based on client's IP address.
      responses:
        "200":
          description: successful retrieval operation. Realtime data available for the client's location
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealtimeWeather"
              example: # Updated example
                location: "San Francisco, California, United States of America"
                temperature: 12
                humidity: 32
                precipitation: 88
                status: "Cloudy"
                win_speed: 5
                last_updated: "2024-11-09T07:14:00Z" # Using ISO 8601 format
        "400":
          description: bad request. Could not determine client's IP address
        "404":
          description: No management location found for the client's IP address

  /v1/realtime/{code}:
    get:
      tags:
        - Realtime Weather
      summary: Returns the current weather information of a specific location identified by the given code.
      description: >
        Clients use this API to get realtime weather data of a specific location by the given code
      parameters:
        - in: path
          name: code
          schema:
            type: string
            example: HCM_VI
          required: true
          description: Location code to get the weather data
      responses:
        "200":
          description: successful retrieval operation. Realtime data available for the client's location
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealtimeWeather"
              example: # Updated example
                location: "San Francisco, California, United States of America"
                temperature: 12
                humidity: 32
                precipitation: 88
                status: "Cloudy"
                win_speed: 5
                last_updated: "2024-11-09T07:14:00Z" # Using ISO 8601 format
        "404":
          description: No managed location found the given code

    put:
      tags:
        - Realtime Weather
      summary: Update realtime weather data based on location code
      description: >
        Clients use this API to get realtime weather data of a specific location by the given code
      parameters:
        - in: path
          name: code
          schema:
            type: string
            example: HCM_VI
          required: true
          description: Location code to update the weather data
      requestBody:
        required: true
        description: a JSON object that represents the realtime weather data that needs to be updated. Request body not included location and last updated time.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RealtimeWeatherUpdate"
            example:
              temperature: 12
              humidity: 55
              precipitation: 23
              status: "Cloudy"
              wind_speed: 88
      responses:
        "200":
          description: successful update operation. Realtime weather data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealtimeWeather"
              example: # Updated example
                location: "San Francisco, California, United States of America"
                temperature: 12
                humidity: 32
                precipitation: 88
                status: "Cloudy"
                win_speed: 5
                last_updated: "2024-11-09T07:14:00Z" # Using ISO 8601 format
        "404":
          description: No managed location found the given code

  /v1/hourly:
    get:
      tags:
        - Hourly Forecast
      summary: Returns weather forecast for upcoming hours in the current day, based on client's IP address
      description: >
        Clients use this API to get weather forecast for upcoming hours in the current day. Location is determined automatically based on client's IP address.
      parameters:
        - in: header
          name: X-Current-Hour
          schema:
            type: number
            default: 7
          required: true
          description: The current hour at the client's location, default value is 7.
      responses:
        "200":
          description: successfully retrieval operation. A json object representing hourly forecast information available for the client's location - only data for the next hours is returned (based on value of the header X-Current-Hour).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HourlyForecast"
              example:
                location: "San Francisco, California, United States of America"
                hourly_forecast:
                  - hour_of_day: 8
                    temperature: 12
                    precipitation: 88
                    status: "Cloudy"
                  - hour_of_day: 9
                    temperature: 13
                    precipitation: 86
                    status: "Cloudy"
                  - hour_of_day: 10
                    temperature: 15
                    precipitation: 60
                    status: "Sunny"
        "400":
          description: bad request. Could not determine client's IP address
        "404":
          description: No managed location found for the client's IP address

  /v1/hourly/{code}:
    get:
      tags:
        - Hourly Forecast
      summary: returns hourly weather forecast information based on location code
      description: >
        Clients use this API to get weather forecast for upcoming hours in the current day, for the given location code, only get data for the next hours is returned (based on value of the header X-Current-Hour).
      parameters:
        - in: header
          name: X-Current-Hour
          schema:
            type: number
            default: 7
          required: true
          description: The current hour at the client's location, default value is 7.
        - in: path
          name: code
          schema:
            type: string
            example: NYC_USA
          required: true
          description: Code of the location
      responses:
        "200":
          description: successfully retrieval operation. A JSON object representing hourly forecast data available for the given code.
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  hourly_forecast:
                    type: array
                    items:
                      type: object
                      properties:
                        hour_of_day:
                          type: number
                        temperature:
                          type: number
                        precipitation:
                          type: number
                        status:
                          type: string
              example:
                location: "San Francisco, California, United States of America"
                hourly_forecast:
                  - hour_of_day: 8
                    temperature: 12
                    precipitation: 88
                    status: "Cloudy"
                  - hour_of_day: 9
                    temperature: 13
                    precipitation: 86
                    status: "Cloudy"
                  - hour_of_day: 10
                    temperature: 15
                    precipitation: 60
                    status: "Sunny"
        "404":
          description: No managed location found for the given location code

    put:
      tags:
        - Hourly Forecast
      summary: Updates hourly weather forecast hours in the current day, based on client's IP address
      description: >
        Clients use this API to update weather forecast for upcoming hours in the current day, for the given location code.
      parameters:
        - in: path
          name: code
          schema:
            type: string
            example: NYC_USA
          required: true
          description: Code of the location
      requestBody:
        required: true
        description: >
          a JSON object that represents the hourly weather forecast data that needs to be updated. It must be an array of hourly forecast information as shown in the below example.
        content:
          application/json:
            example:
              - hour_of_day: 8
                temperature: 12
                precipitation: 88
                status: "Cloudy"
              - hour_of_day: 9
                temperature: 13
                precipitation: 86
                status: "Cloudy"
              - hour_of_day: 10
                temperature: 15
                precipitation: 60
                status: "Sunny"
      responses:
        "200":
          description: successfully update operation. Hourly weather forecast data updated successfully - all previous data is replaced
          content:
            application/json:
              example:
                location: "San Francisco, California, United States of America"
                hourly_forecast:
                  - hour_of_day: 8
                    temperature: 12
                    precipitation: 88
                    status: "Cloudy"
                  - hour_of_day: 9
                    temperature: 13
                    precipitation: 86
                    status: "Cloudy"
                  - hour_of_day: 10
                    temperature: 15
                    precipitation: 60
                    status: "Sunny"
        "404":
          description: No managed location found for the given code

components:
  schemas:
    Location:
      type: object
      properties:
        code:
          type: string
          description: Unique code representing the location
        city_name:
          type: string
          description: Name of the city
        region_name:
          type: string
          description: Name of the region
        country_name:
          type: string
          description: Name of the country
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 country code
        enabled:
          type: boolean
          description: Indicates whether the location is enabled for weather forecast
        trashed:
          type: boolean
          description: Indicates whether the location is marked as trashed
    LocationRequest:
      type: object
      properties:
        code:
          type: string
          description: Unique code representing the location
        city_name:
          type: string
          description: Name of the city
        region_name:
          type: string
          description: Name of the region
        country_name:
          type: string
          description: Name of the country
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 country code
        enable:
          type: boolean
          description: Whether this code is active for weather forecast
    RealtimeWeather:
      type: object
      properties:
        location:
          type: string
          description: Location information (city, region, country)
        temperature:
          type: number
          format: float
          description: Current temperature in Celsius
        humidity:
          type: number
          format: float
          description: Current humidity percentage
        precipitation:
          type: number
          format: float
          description: Current precipitation amount (you might want to specify units)
        status:
          type: string
          description: Weather condition description
        win_speed:
          type: number
          format: float
          description: Wind speed (you might want to specify units)
        last_updated:
          type: string
          format: date-time
          pattern: yyyy-MM-dd'T'HH:mm:ss'Z'
          description: The last time weather data is updated. Datetime format follow RFC 3339 and ISO 8601
          example: 2024-11-10T11:09:16Z

    RealtimeWeatherUpdate:
      type: object
      properties:
        location_code:
          type: string
          description: Unique code representing the location
        temperature:
          type: number
          format: float
          description: Updated temperature in Celsius
        humidity:
          type: number
          format: float
          description: Updated humidity percentage
        condition:
          type: string
          description: Updated weather condition description

    HourlyForecast:
      type: object
      properties:
        hour_of_day:
          type: number
          description: Hour of the day for the forecasted data
        temperature:
          type: number
          format: float
          description: Temperature forecast for that hour in Celsius
        precipitation:
          type: number
          format: float
          description: Precipitation level forecast for that hour
        status:
          type: string
          description: Weather condition description
